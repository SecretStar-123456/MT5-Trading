//+----------------------------------------------------------------------+
//|                                              TrendWave Optimized.mq4 |
//|                                                         David J. Lin |
//| Optimized TrendWave indicator                                        |
//| written for Melvin D'Souza (dmx_lab@yahoo.com)                       |
//|                                                                      |
//| Coded by David J. Lin (dave.j.lin@gmail.com)                         |
//| Evanston, IL, June 25, 2011                                          |
//+----------------------------------------------------------------------+
#property copyright "Copyright © 2011, Melvin DSouza & David J. Lin"
/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/

#property indicator_separate_window
#property indicator_minimum -100.0
#property indicator_maximum 100.0
#property indicator_levelcolor SlateGray
#property indicator_levelstyle 1
#property indicator_buffers 8
#property indicator_color1 Lime
#property indicator_color2 Red
#property indicator_color3 Black
#property indicator_color4 Black
#property indicator_color5 Black
#property indicator_color6 Black
#property indicator_color7 Black
#property indicator_color8 Black
#property indicator_width1 1
#property indicator_level1 60.0
#property indicator_width2 1
#property indicator_level2 53.0
#property indicator_level3 -50.0
#property indicator_level4 -60.0

extern int WavePeriod = 10;
extern int AvgPeriod = 21;
extern bool SoundAlert = FALSE;
extern bool EmailAlert = FALSE;

double array1[];
double array2[];
double array3[];
double array4[];
double array5[];
double array6[];
double array7[];
double array8[];

int v1 = -50;
int v2 = 53;
int lasttime;

int init() 
{
 lasttime=0;
 
 IndicatorShortName("TrendWave Optimized");

 SetIndexBuffer(4, array1);
 SetIndexLabel(4, "Bull 181");
 SetIndexStyle(4, DRAW_LINE, STYLE_SOLID, 1, Lime);
 SetIndexDrawBegin(4, 0);

 SetIndexBuffer(5, array2);
 SetIndexLabel(5, "Bear 181");
 SetIndexStyle(5, DRAW_LINE, STYLE_SOLID, 1, Red);
 SetIndexDrawBegin(5, 0);

 SetIndexBuffer(0, array3);
 SetIndexLabel(0, "ESA");
 SetIndexStyle(0, DRAW_NONE);
 SetIndexDrawBegin(0, 0);

 SetIndexBuffer(2, array4);
 SetIndexLabel(2, "DD");
 SetIndexStyle(2, DRAW_NONE);
 SetIndexDrawBegin(2, 0);

 SetIndexBuffer(3, array5);
 SetIndexLabel(3, "CI");
 SetIndexStyle(3, DRAW_NONE);
 SetIndexDrawBegin(3, 0);

 SetIndexBuffer(1, array6);
 SetIndexLabel(1, "DD Values");
 SetIndexStyle(1, DRAW_NONE);
 SetIndexDrawBegin(1, 0);

 SetIndexBuffer(6, array7);
 SetIndexLabel(6, "Buy Dot 181");
 SetIndexStyle(6, DRAW_ARROW, STYLE_SOLID, 2, Blue);
 SetIndexArrow(6, 108);
 SetIndexDrawBegin(6, 0);

 SetIndexBuffer(7, array8);
 SetIndexLabel(7, "Sell Dot 181");
 SetIndexStyle(7, DRAW_ARROW, STYLE_SOLID, 2, Red);
 SetIndexArrow(7, 108);
 SetIndexDrawBegin(7, 0);

 ArraySetAsSeries(array1, TRUE);
 ArraySetAsSeries(array2, TRUE);
 ArraySetAsSeries(array3, TRUE);
 ArraySetAsSeries(array4, TRUE); 
 ArraySetAsSeries(array5, TRUE); 
 ArraySetAsSeries(array6, TRUE);
 
 return (0);
}

int deinit() 
{
 string s1;
 int i, obj = ObjectsTotal();

 for (i=obj-1; i >= 0; i--) 
 {
  s1 = ObjectName(i);
  if (StringFind(s1, "arr") == 0) ObjectDelete(s1);
 }
 return (0);
}

int start() 
{
 if (Time[1]==lasttime) return;
 lasttime=Time[1];
 
 string s1;

 int i, ic = IndicatorCounted();
 
 if (ic < 0) return (-1);
 if (ic > 0) ic--;

 int bars = Bars-ic;

 for(i=bars;i>0;i--) 
 {
  array3[i] = iMA(NULL,0,WavePeriod,0,MODE_EMA,PRICE_TYPICAL,i);
 }

 for(i=bars;i>0;i--) 
 {
  array6[i] = MathAbs((iHigh(NULL,0,i) + iClose(NULL,0,i) + iLow(NULL,0,i)) / 3.0 - array3[i]);
 }

 for(i=bars;i>0;i--) 
 {
  array4[i] = iMAOnArray(array6,0,WavePeriod,0,MODE_EMA,i);
 }

 for(i=bars;i>0;i--) 
 {
  if (array4[i] > 0.0) 
   array5[i] = ((iHigh(NULL,0,i) + iClose(NULL,0,i) + iLow(NULL,0,i)) / 3.0 - array3[i]) / (0.015 * array4[i]);
  else array5[i] = 0; 
 }

 for(i=bars;i>0; i--) 
 {
  array1[i] = iMAOnArray(array5,0,AvgPeriod,0,MODE_EMA,i);
 }

 for(i=bars;i>0;i--) 
 {
  array2[i] = iMAOnArray(array1,0,4,0,MODE_SMA,i);
 }
 
 for(i=bars;i>0;i--) 
 {
  if (array1[i] >= array2[i] && array1[i+1] <= array2[i+1] && array1[i] < v1) 
  {
   array7[i] = array1[i];
   s1 = "arrup" + Time[i];
   
   if(ObjectFind(s1)<0)
   {
    ObjectCreate(s1, OBJ_ARROW, 0, Time[i], Low[i]);
    ObjectSet(s1, OBJPROP_COLOR, Blue);
    ObjectSet(s1, OBJPROP_STYLE, STYLE_SOLID);
    ObjectSet(s1, OBJPROP_WIDTH, 1);
    ObjectSet(s1, OBJPROP_ARROWCODE, 108);

    if (i==1) SendAlert("buy");
   }
  } 
  else array7[i] = -1000;
  
  if (array1[i] <= array2[i] && array1[i+1] >= array2[i+1] && array1[i] > v2) 
  {
   array8[i] = array2[i];
   s1 = "arrdn" + Time[i];

   if(ObjectFind(s1)<0)
   {
    ObjectCreate(s1, OBJ_ARROW, 0, Time[i], High[i] + iATR(Symbol(),0,14,i));
    ObjectSet(s1, OBJPROP_COLOR, Red);
    ObjectSet(s1, OBJPROP_STYLE, STYLE_SOLID);
    ObjectSet(s1, OBJPROP_WIDTH, 1);
    ObjectSet(s1, OBJPROP_ARROWCODE, 108);
 
    if (i == 1) SendAlert("sell");
   }
  } 
  else array8[i] = -1000;
  
 }
 return (0);
}

void SendAlert(string bias) 
{
 
 if (SoundAlert) 
 {
  if (bias == "buy") Alert(Symbol() + " => TF: " + Period() + "M => " + TimeToStr(TimeCurrent()) + " buy");
  if (bias == "sell") Alert(Symbol() + " => TF: " + Period() + "M => " + TimeToStr(TimeCurrent()) + " sell");
 }
  
 if (EmailAlert) 
 {
  if (bias == "buy") SendMail("TrendWave Optimized", Symbol() + " => TF: " + Period() + "M => " + TimeToStr(TimeCurrent()) + " buy");
  if (bias == "sell") SendMail("TrendWave Optimized", Symbol() + " => TF: " + Period() + "M => " + TimeToStr(TimeCurrent()) + " sell");
 }

 return;
}